# Create a deployment called my-webapp with image: nginx, label tier:frontend and 2 replicas. 
# Expose the deployment as a NodePort service with name front-end-service , port: 80 and NodePort: 30083

# 1) Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-webapp
  name: my-webapp
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-webapp
  template:
    metadata:
      labels:
        app: my-webapp
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
---
# 2) NodePort
#  k expose deployment my-webapp --type='NodePort' --port=80 --target-port=30083 --name=front-end-service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-webapp
  name: front-end-service
  namespace: default
spec:
  clusterIP: 172.20.182.237
  clusterIPs:
  - 172.20.182.237
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 30083
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: my-webapp
  type: NodePort