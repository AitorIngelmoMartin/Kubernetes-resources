Los service accounts nos permiten disponer de usuarios no humanos (de servicio) en k8s.


Los pods, componentes del sistema y entidades de dentro y fuera del cluster pueden usar credenciales de un 
serviceAccount para identificarse como ese serviceAccount.

Los objectos ServiceAccount del servidor API tienen las siguientes propiedades:

    Están vinculados a un único NameSpace. Teniendo cada NameSpace un ServiceAccount 'default' al crear
    un NameSpace.

    Ligereza. La existencia de un ServiceAccount se da a nivel de Cluster y se definen via Kubernetes API.
    
    La ligereza de los ServiceAccount permite que sean portables con facilidad.

El ServiceAccount por defecto usado en los pods del cluster es muy limitado y permtite únicamente efectuar
acciones del Cluster de Kubernetes. 

NO podemos modificar un ServiceAccount de un pod, obligatoriamente debemos recrearlo con el nuevo ServiceAccount.
No obstante, si podemos modificarlo en un deployment dado que todos los cambios en la secicón de los pods se 
aplicarán en un rollout (es decir, por debajo lo destruye y reconstruye).


Hasta la versión 1.22 de K8S siempre que creabas un ServiceAccount se generaba un secreto con el token y se montaba
en los volumes. A día de hoy, esto no ocurre, lo que debes hacer es generar el ServiceAccount y crear sobre él el 
token

    kubectl create serviceaccount <serviceAccount-name>

    kubectl create token <ServiceAccount-name>

    Este token por defecto caduca en 1h, pero podemos aumentarlo con comandos.

A partir de la versión 1.24 podemos hacer asociar el token al ServiceAccount si hacemos lo siguiente:

    apiVersion: v1
    kind: Secret
    type: kubernetes.io/service-account-token
    metadata:
    name: MySecretName
    annotations:
        kubernetes.io/service-account.name: <nombre-del-secret-account>

Pero debemos tener en cuenta que el SecretAccount YA DEBE EXISTIR antes de crear este recurso


Podemos modificar el SecretAccount de un deployment/pod si agregamos el campo 'serviceAccountName' dentro de spec.

apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  serviceAccountName: build-robot
